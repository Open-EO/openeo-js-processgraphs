{
	"parameters": [
		{
			"name": "collection-id",
			"description": "The ID of the collection to load.",
			"default": "COPERNICUS/S2",
            "schema": {
                "type": "string",
                "subtype": "collection-id",
                "pattern": "^[\\w\\-\\.~/]+$"
            }
		},
		{
			"name": "bands",
            "description": "The band names for the NIR, RED and BLUE bands in exactly this order.",
            "default": [
				"B08",
				"B04",
				"B02"
			],
            "schema": {
				"type": "array",
				"items": {
					"type": "string",
					"subtype": "band-name"
				}
			}
		}
	],
	"process_graph": {
		"dc": {
			"process_id": "load_collection",
			"description": "Loading the data; The order of the specified bands is important for the following reduce operation.",
			"arguments": {
				"id": {
					"from_parameter": "collection-id"
				},
				"spatial_extent": {
					"west": 16.1,
					"east": 16.6,
					"north": 48.6,
					"south": 47.2
				},
				"temporal_extent": [
					"2018-01-01",
					"2018-02-01"
				],
				"bands": {
					"from_parameter": "bands"
				}
			}
		},
		"evi": {
			"process_id": "reduce_dimension",
			"description": "Compute the EVI. Formula: 2.5 * (NIR - RED) / (1 + NIR + 6*RED + -7.5*BLUE)",
			"arguments": {
				"data": {
					"from_node": "dc"
				},
				"dimension": "spectral",
				"reducer": {
					"process_graph": {
						"nir": {
							"process_id": "array_element",
							"arguments": {
								"data": {
									"from_parameter": "data"
								},
								"index": 0
							}
						},
						"red": {
							"process_id": "array_element",
							"arguments": {
								"data": {
									"from_parameter": "data"
								},
								"index": 1
							}
						},
						"blue": {
							"process_id": "array_element",
							"arguments": {
								"data": {
									"from_parameter": "data"
								},
								"index": 2
							}
						},
						"sub": {
							"process_id": "subtract",
							"arguments": {
								"data": [
									{
										"from_node": "nir"
									},
									{
										"from_node": "red"
									}
								]
							}
						},
						"p1": {
							"process_id": "product",
							"arguments": {
								"data": [
									6,
									{
										"from_node": "red"
									}
								]
							}
						},
						"p2": {
							"process_id": "product",
							"arguments": {
								"data": [
									-7.5,
									{
										"from_node": "blue"
									}
								]
							}
						},
						"sum": {
							"process_id": "sum",
							"arguments": {
								"data": [
									1,
									{
										"from_node": "nir"
									},
									{
										"from_node": "p1"
									},
									{
										"from_node": "p2"
									}
								]
							}
						},
						"div": {
							"process_id": "divide",
							"arguments": {
								"data": [
									{
										"from_node": "sub"
									},
									{
										"from_node": "sum"
									}
								]
							}
						},
						"p3": {
							"process_id": "product",
							"arguments": {
								"data": [
									2.5,
									{
										"from_node": "div"
									}
								]
							},
							"result": true
						}
					}
				}
			}
		},
		"mintime": {
			"process_id": "reduce_dimension",
			"description": "Compute a minimum time composite by reducing the temporal dimension",
			"arguments": {
				"data": {
					"from_node": "evi"
				},
				"dimension": "temporal",
				"reducer": {
					"process_graph": {
						"min": {
							"process_id": "min",
							"arguments": {
								"data": {
									"from_parameter": "data"
								}
							},
							"result": true
						}
					}
				}
			}
		},
		"save": {
			"process_id": "save_result",
			"arguments": {
				"data": {
					"from_node": "mintime"
				},
				"format": "GTiff"
			},
			"result": true
		}
	}
}